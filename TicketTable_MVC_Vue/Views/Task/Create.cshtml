<div  id="app">
    <b-container class="mt-3" >
        <b-form v-on:submit="onSubmit" v-if="show">
          <b-form-group
            id="input-group-1"
            label="Description"
            label-for="input-1"
          >
            <b-form-input
              id="input-1"
              v-model="form.description"
              type="text"
              required
            ></b-form-input>
          </b-form-group>

          <b-form-group id="input-group-3" label="Author:" label-for="input-3">
            <b-form-select
              id="input-3"
              v-model="form.author"
              :options="users"
              required
            ></b-form-select>
          </b-form-group>

          <b-form-group id="input-group-3" label="Project:" label-for="input-4">
            <b-form-select
              id="input-3"
              v-model="form.project"
              :options="projects"
              required
            ></b-form-select>
          </b-form-group>

        <b-form-group id="input-group-3" label="Status:" label-for="input-4">
            <b-form-select
              id="input-3"
              v-model="form.status"
              :options="statuses"
              required
            ></b-form-select>
          </b-form-group>

          
          <b-form-group id="input-group-3" label="ClosedBy:" label-for="input-3">
            <b-form-select
              id="input-3"
              v-model="form.closedBy"
              :options="users"
            ></b-form-select>
          </b-form-group>

          <b-button class="mt-3" type="submit" variant="primary">Submit</b-button>
        </b-form>
        <b-card class="mt-3" header="Form Data Result">
          <pre class="m-0">{{ form }}</pre>
        </b-card>
    <b-container>
</div>


@section scripts {
<script>
    var App = new Vue({
        el: "#app",
        data() {
          return {
            form: {
              description: "",
            },
            show: true,
            users: [],
            projects: [],
            statuses: []
          }
        },
          created () {
            this.getUsers(),
            this.getProjects(),
            this.getStatuses()
          },
        methods: {
          onSubmit(event) {
            event.preventDefault()
            alert(JSON.stringify(this.form))
        },
        getUsers: function () {
            let promise = axios.get('/api/v1/users')

            return promise.then((result) => {
                data = result.data;
                console.log(data);
                let options = [];
                data.forEach(function(item){
                    console.log(item);
                    options.push({value: item.id, text: item.fullName })
                });
                this.users = options;
                console.log(this.users);
            })
            .catch(error => {
                    return []
            })    
        },
        getProjects: function () {
            let promise = axios.get('/api/v1/projects')

            return promise.then((result) => {
                data = result.data;
                console.log(data);
                let options = [];
                data.forEach(function(item){
                    console.log(item);
                    options.push({value: item.id, text: item.name })
                });
                this.projects = options;
                console.log(this.projects);
            })
            .catch(error => {
                    return []
                    })    
        },
        getStatuses: function () {
            let promise = axios.get('/api/v1/TicketStatuses')

            return promise.then((result) => {
                data = result.data;
                console.log(data);
                let options = [];
                data.forEach(function(item){
                    console.log(item);
                    options.push({value: item.id, text: item.name })
                });
                this.statuses = options;
                console.log(this.statuses);
            })
            .catch(error => {
                    return []
            })    
        }
        }
    })
</script>
}